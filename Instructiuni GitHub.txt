üíª 1. CUM FOLOSESTE FIECARE COLEG GIT(LOCAL)

O singurƒÉ datƒÉ ‚Äì Instalare
DescarcƒÉ »ôi instaleazƒÉ Git:
üëâ https://git-scm.com/downloads

ConfigureazƒÉ numele »ôi email-ul in terminal:

git config --global user.name "Prenume Nume"
git config --global user.email "emailul@tau.com"



üì¶ 2. PRIMA OARA: CloneazƒÉ repository-ul
√én terminal (sau Git Bash), scrie:


git clone https://github.com/USER/REPO-NAME.git

Asta va copia codul √Æn calculatorul tƒÉu √Æntr-un folder.


üîÑ 3. INAINTE SA INCEPI LUCRU: SINCRONIZEAZA-TI CODUL
√én terminal (sau Git Bash), scrie:

git checkout main
git pull origin main

Comenzile astea se asigurƒÉ cƒÉ ai ultima versiune de cod pe laptopul tƒÉu.


üåø 4. CREEAZA UN BRANCH NOU(RAMURA):
Asta te ajutƒÉ sƒÉ nu strici codul principal:

√én terminal (sau Git Bash), scrie:

git checkout -b nume-functionalitate

Exemplu: git checkout -b pagina-login


üíæ 5. CUM SALVEZI MODIFICARILE
Faci modificƒÉri √Æn cod (de ex. √Æn Visual Studio Code)

Apoi √Æn terminal scrii:

git add .
git commit -m "Am adƒÉugat pagina de login"


üöÄ 6. TRIMITE CODUL INAPOI PE GITHUB
√én terminal (sau Git Bash), scrie:

git push origin nume-functionalitate


üì¨ 7. DESCHIDE UN PULLREQUEST
Mergi pe GitHub, √Æn repository

GitHub √Æ»õi va arƒÉta un banner cu:

"You recently pushed a branch" ‚Üí click pe "Compare & pull request"

Scrie ce ai lucrat »ôi dƒÉ click pe "Create pull request"

Alt coleg poate verifica ce ai fƒÉcut »ôi apoi aproba ‚û§ codul intrƒÉ √Æn main.


‚ùó 8. EVITAREA GRESELILOR FRECVENTE

Gre»ôealƒÉ:				Cum o evi»õi:
Lucrezi direct pe main		->	Folose»ôte mereu git checkout -b nume-branch
Uiti sƒÉ tragi codul nou		->	FƒÉ git pull origin main √Ænainte sƒÉ √Æncepi
Dai push pe branch gre»ôit	->	VerificƒÉ cu git branch √Ænainte de git push
Conflicte de fi»ôiere		->	Nu edita acelea»ôi fi»ôiere √Æn paralel cu al»õi colegi
